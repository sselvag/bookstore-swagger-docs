openapi: 3.0.0
info:
  title: Bookstore API
  description: CRUD operations for managing authors, books, and users in a bookstore.
  version: 1.0.0
  contact:
    name: Swaathy Selva
    email: swaathy.selva@gmail.com
paths:
  /authors:
    get:
      summary: Get all authors
      responses:
        '200':
          description: A list of authors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Author'
    post:
      summary: Create a new author
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
      responses:
        '201':
          description: The newly created author
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
  /authors/{id}:
    get:
      summary: Get a specific author by ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the author to retrieve
          schema:
            type: string
      responses:
        '200':
          description: The author object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
    patch:
      summary: Update an existing author
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the author to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
      responses:
        '200':
          description: The updated author
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
    delete:
      summary: Delete an author
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the author to delete
          schema:
            type: string
      responses:
        '204':
          description: Author deleted successfully
  /books:
    get:
      summary: Get all books
      responses:
        '200':
          description: A list of books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
    post:
      summary: Create a new book
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '201':
          description: The newly created book
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
  /books/{id}:
    get:
      summary: Get a specific book by ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the book to retrieve
          schema:
            type: string
      responses:
        '200':
          description: The book object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
    patch:
      summary: Update an existing book
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the book to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '200':
          description: The updated book
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
    delete:
      summary: Delete a book
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the book to delete
          schema:
            type: string
      responses:
        '204':
          description: Book deleted successfully
  /users:
    get:
      summary: Get all users
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: The newly created user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /users/{id}:
    get:
      summary: Get a specific user by ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the user to retrieve
          schema:
            type: string
      responses:
        '200':
          description: The user object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    patch:
      summary: Update an existing user
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the user to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: The updated user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      summary: Delete a user
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the user to delete
          schema:
            type: string
      responses:
        '204':
          description: User deleted successfully
components:
  schemas:
    Author:
      type: object
      required:
        - name
        - listOfBooks
        - briefBiography
      properties:
        name:
          type: string
          description: Name of the author
        listOfBooks:
          type: array
          items:
            type: string
          description: List of books written by the author
        briefBiography:
          type: string
          description: Brief biography of the author
    Book:
      type: object
      required:
        - title
        - author
        - publicationDate
        - ISBN
      properties:
        title:
          type: string
          description: Title of the book
        author:
          type: string
          description: Name of the book's author
        publicationDate:
          type: string
          format: date
          description: Date of publication
        ISBN:
          type: number
          description: International Standard Book Number
    User:
      type: object
      required:
        - name
        - email
        - booksPurchased
      properties:
        name:
          type: string
          description: Name of the user
        email:
          type: string
          format: email
          description: Email of the user
        booksPurchased:
          type: array
          items:
            type: string
          description: List of books purchased by the user


